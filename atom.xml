<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>wtl&#39;s blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wtl666wtl.github.io/"/>
  <updated>2016-06-13T12:40:10.857Z</updated>
  <id>http://wtl666wtl.github.io/</id>
  
  <author>
    <name>wtl</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>bzoj1090字符串折叠</title>
    <link href="http://wtl666wtl.github.io/2016/06/13/bzoj1090%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8A%98%E5%8F%A0/"/>
    <id>http://wtl666wtl.github.io/2016/06/13/bzoj1090字符串折叠/</id>
    <published>2016-06-13T11:58:24.000Z</published>
    <updated>2016-06-13T12:40:10.857Z</updated>
    
    <content type="html">&lt;p&gt;原题戳&lt;a href=&quot;http://www.lydsy.com/JudgeOnline/problem.php?id=1090&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这&lt;/a&gt;&lt;br&gt;感觉这题与第一版不少区间DP题类似。&lt;br&gt;乱YY一下，发现一段区间so(a,b)最多三种情况：&lt;br&gt;1.不变，贡献是b-a+1&lt;br&gt;2.分成两段，各自压缩，贡献是so(a,i)+so(i+1,b)&lt;br&gt;3.发现如果一段字符可以覆盖该区间整数次，那么就压缩那一段字符加上其出现次数，贡献是so(a,a+i-1)+2+((b-a+1)/i的位数)&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#include &amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#include &amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#include &amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;char s[106];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int n,f[106][106];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bool pd(int a,int b,int o)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int j=1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for(int i=a;i&amp;lt;=b;i++)if(s[i]!=s[a+j-1])return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else j%=o,j++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;inline int doit(int x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if(x&amp;lt;10)return 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else if(x&amp;lt;100)return 2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else return 3;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int so(int a,int b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int &amp;amp;res=f[a][b];if(res)return res;if(a==b)return res=1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int u=res=b-a+1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for(int i=a;i&amp;lt;b;i++)res=min(res,so(a,i)+so(i+1,b));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for(int i=1;i&amp;lt;=u;i++)if(u%i==0&amp;amp;&amp;amp;pd(a,b,i))res=min(res,so(a,a+i-1)+2+doit((b-a+1)/i));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    s[0]=&amp;apos;^&amp;apos;;scanf(&amp;quot;%s&amp;quot;,s+1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    n=strlen(s)-1;printf(&amp;quot;%d\n&amp;quot;,so(1,n));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;原题戳&lt;a href=&quot;http://www.lydsy.com/JudgeOnline/problem.php?id=1090&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这&lt;/a&gt;&lt;br&gt;感觉这题与第一版不少区间DP题类似。&lt;br&gt;乱YY一下，发现一
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>bzoj1060时态同步</title>
    <link href="http://wtl666wtl.github.io/2016/06/13/bzoj1060%E6%97%B6%E6%80%81%E5%90%8C%E6%AD%A5/"/>
    <id>http://wtl666wtl.github.io/2016/06/13/bzoj1060时态同步/</id>
    <published>2016-06-13T11:56:41.000Z</published>
    <updated>2016-06-13T12:40:18.856Z</updated>
    
    <content type="html">&lt;p&gt;原题戳&lt;a href=&quot;http://www.lydsy.com/JudgeOnline/problem.php?id=1060&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这&lt;/a&gt;&lt;br&gt;感觉自己还是太弱了，一天刷不了几道题。。。&lt;br&gt;这题树形DP还是比较明显的，然后并不会。。。&lt;br&gt;膜拜了hzwer的题解后明白了：对于一个点x，设f[x]是x点到以x为根的子树中最深的点的距离。那么每个点可以通过f[x]=max(f[e.to]+e.v)求出f[x]，而ans则累加f[x]-f[e.to]-e.v的值，这样可以保证在x节点时，以x为根的子树保证试题同步。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#include &amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#include &amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#include &amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;struct arr&amp;#123;int to,ne,v;&amp;#125;e[1000000];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int n,rt,x,y,v,cnt,head[500001];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;long long f[500001];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;long long ans;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;inline void add(int x,int y,int v)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    e[++cnt].to=y;e[cnt].ne=head[x];e[cnt].v=v;head[x]=cnt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    e[++cnt].to=x;e[cnt].ne=head[y];e[cnt].v=v;head[y]=cnt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;inline int read()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int x=0,f=0,c=getchar();for(; c&amp;gt;&amp;apos;9&amp;apos;||c&amp;lt;&amp;apos;0&amp;apos;; f=(c==&amp;apos;-&amp;apos;),c=getchar());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for(; c&amp;gt;=&amp;apos;0&amp;apos;&amp;amp;&amp;amp;c&amp;lt;=&amp;apos;9&amp;apos;; c=getchar())x=(x&amp;lt;&amp;lt;1)+(x&amp;lt;&amp;lt;3)+c-&amp;apos;0&amp;apos;;return f?-x:x;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int dfs(int x,int fa)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for(int i=head[x];i;i=e[i].ne)if(e[i].to!=fa)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dfs(e[i].to,x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        f[x]=max(f[x],f[e[i].to]+1LL*e[i].v);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for(int i=head[x];i;i=e[i].ne)if(e[i].to!=fa)ans+=1LL*(f[x]-f[e[i].to]-e[i].v);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    n=read();rt=read();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for(int i=1;i&amp;lt;n;i++)x=read(),y=read(),v=read(),add(x,y,v);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dfs(rt,0);printf(&amp;quot;%lld\n&amp;quot;,ans);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;原题戳&lt;a href=&quot;http://www.lydsy.com/JudgeOnline/problem.php?id=1060&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这&lt;/a&gt;&lt;br&gt;感觉自己还是太弱了，一天刷不了几道题。。。&lt;br&gt;这题树形DP
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>5月做题记录</title>
    <link href="http://wtl666wtl.github.io/2016/05/06/5%E6%9C%88%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    <id>http://wtl666wtl.github.io/2016/05/06/5月做题记录/</id>
    <published>2016-05-06T12:02:15.000Z</published>
    <updated>2016-05-06T12:06:25.138Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;5.6&lt;/strong&gt;&lt;br&gt;bzoj 1025 找规律+DP&lt;br&gt;bzoj 1045 中位数的性质&lt;br&gt;bzoj 1024 暴搜&lt;br&gt;bzoj 4551 至今Wrong_Answer，orz&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;5.6&lt;/strong&gt;&lt;br&gt;bzoj 1025 找规律+DP&lt;br&gt;bzoj 1045 中位数的性质&lt;br&gt;bzoj 1024 暴搜&lt;br&gt;bzoj 4551 至今Wrong_Answer，orz&lt;/p&gt;

    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Flag</title>
    <link href="http://wtl666wtl.github.io/2016/05/05/Flag/"/>
    <id>http://wtl666wtl.github.io/2016/05/05/Flag/</id>
    <published>2016-05-05T11:39:35.000Z</published>
    <updated>2016-05-06T11:58:39.112Z</updated>
    
    <content type="html">&lt;p&gt;看了一下bzoj1-2版的非权限题有120+题，要完成其中100题。&lt;br&gt;立下一个巨大的Flag，从到6.1在bzoj刷完1-2版的100题。就弃￥600开权限。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;看了一下bzoj1-2版的非权限题有120+题，要完成其中100题。&lt;br&gt;立下一个巨大的Flag，从到6.1在bzoj刷完1-2版的100题。就弃￥600开权限。&lt;/p&gt;

    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>树链剖分简析</title>
    <link href="http://wtl666wtl.github.io/2016/05/03/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86%E7%AE%80%E6%9E%90/"/>
    <id>http://wtl666wtl.github.io/2016/05/03/树链剖分简析/</id>
    <published>2016-05-03T11:46:46.000Z</published>
    <updated>2016-05-06T12:00:39.811Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;一些注解&lt;/strong&gt;&lt;br&gt;树链剖分，顾名思义是将一棵树划分成若干条链，然后对链进行维护(线段树等)。&lt;br&gt;这里首先定义一些变量/名词：  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;x.size：以x为根的子树节点数目  &lt;/li&gt;
&lt;li&gt;x的重儿子：x的儿子中size值最大的  &lt;/li&gt;
&lt;li&gt;重链：所有节点和它的重儿子的连边  &lt;/li&gt;
&lt;li&gt;轻链：其他的边&lt;br&gt;&lt;a href=&quot;http://imgsrc.baidu.com/forum/w%3D580/sign=52e68cbe7aec54e741ec1a1689399bfd/9258d109b3de9c82a281f80f6d81800a18d8434d.jpg&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;示意图&lt;/a&gt;&lt;br&gt;如图,粗的边为重边，较细的边为轻边&lt;br&gt;&lt;strong&gt;关于树链剖分的实现&lt;/strong&gt;&lt;br&gt;树链剖分的实现主要是两遍dfs。&lt;br&gt;第一遍是以root为根建立一棵树，同时统计出每个点的重儿子bigson。&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void build(int x,int father)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ff[x]=1;//标记是否到达过该点，避免重复&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int maxsize=0;//比较儿子size的大小&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size[x]=1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fa[x]=father;//记录父亲&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    deep[x]=deep[father]+1;//记录深度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for(int i=head[x]; i; i=son[i].ne)if(ff[son[i].s]==0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        build(son[i].s,x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size[x]+=size[son[i].s];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if(size[son[i].s]&amp;gt;maxsize)maxsize=size[son[i].s],bigson[x]=son[i].s;//找重儿子&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;第二遍是要纪录下新的每个点新的id，而把一条重链上的点控制在一个区间内。&lt;br&gt;如上图：则id分别为1，2，6，7，5，3，8，4，9。&lt;br&gt;为了方便，同时记下该点所在重链的头top。如上图：则top分别为1，1，3，4，5，1，4，1，4。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void build2(int x,int bigfather)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ff[x]=1;//标记是否到达过该点，避免重复&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    id[x]=tot++;//id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    top[x]=bigfather;//top&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if(bigson[x])build2(bigson[x],bigfather);//重儿子&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for(int i=head[x]; i; i=son[i].ne)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       if(son[i].s!=bigson[x]&amp;amp;&amp;amp;ff[son[i].s]==0)build2(son[i].s,son[i].s);//其他儿子&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然而树链剖分有什么用呢?这是为了后面的维护打基础。之后我们要建造一棵线段树，维护树的点在id情况下的点权。即x的id为y，点权为z，则记点y的值为z。&lt;br&gt;&lt;strong&gt;修改操作与查询操作&lt;/strong&gt;&lt;br&gt;单点修改：根据id直接在线段树中单点修改。&lt;br&gt;区间修改操作类似查询操作。&lt;br&gt;查询操作：主要由题目要求而定，如求max，min，sum等等。但主体是不变的，如果不在同一条重链上则不断往上靠，边靠边做查询，否则就直接查询。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;int query(int x,int y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int ans=0,anss=-100000000;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    while(top[x]!=top[y]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if(deep[top[x]]&amp;lt;deep[top[y]])swap(x,y);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //此处加具体操作&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        x=fa[top[x]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if(deep[x]&amp;gt;deep[y])swap(x,y);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //此处加具体操作&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;入门题&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;http://www.lydsy.com/JudgeOnline/problem.php?id=1036&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;BZOJ1036&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;一些注解&lt;/strong&gt;&lt;br&gt;树链剖分，顾名思义是将一棵树划分成若干条链，然后对链进行维护(线段树等)。&lt;br&gt;这里首先定义一些变量/名词：  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;x.size：以x为根的子树节点数目  &lt;/li&gt;
&lt;li&gt;x的重儿子：x的儿子中
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://wtl666wtl.github.io/2016/04/26/hello-world/"/>
    <id>http://wtl666wtl.github.io/2016/04/26/hello-world/</id>
    <published>2016-04-26T12:03:22.274Z</published>
    <updated>2016-04-26T12:03:22.275Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
